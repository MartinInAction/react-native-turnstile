{"version":3,"sources":["../src/index.ts","../src/ReactNativeTurnstile.tsx","../src/constants.ts"],"sourcesContent":["import ReactNativeTurnstile, { resetTurnstile } from './ReactNativeTurnstile';\r\n\r\nexport default ReactNativeTurnstile;\r\nexport { resetTurnstile };\r\n","/*\r\n * MIT License\r\n *\r\n * Copyright (c) 2024 Jay Simons\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n// @ts-ignore\r\nimport React, { useEffect } from 'react';\r\nimport { WebView } from 'react-native-webview';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useRef } from 'react';\r\n\r\nimport { PUBLIC_DOMAIN } from './constants';\r\n\r\nimport type { SupportedLanguages } from 'turnstile-types';\r\nimport type { StyleProp, ViewStyle } from 'react-native';\r\n\r\nexport interface TurnstileProps extends TurnstileCallbacks {\r\n\tsitekey: string;\r\n\taction?: string;\r\n\tcData?: string;\r\n\ttheme?: 'light' | 'dark' | 'auto';\r\n\tlanguage?: SupportedLanguages | 'auto';\r\n\ttabIndex?: number;\r\n\tresponseField?: boolean;\r\n\tresponseFieldName?: string;\r\n\tsize?: 'normal' | 'compact';\r\n\tfixedSize?: boolean;\r\n\tretry?: 'auto' | 'never';\r\n\tretryInterval?: number;\r\n\trefreshExpired?: 'auto' | 'manual' | 'never';\r\n\tappearance?: 'always' | 'execute' | 'interaction-only';\r\n\texecution?: 'render' | 'execute';\r\n\tid?: string;\r\n\tresetRef?: TurnstileResetRef;\r\n\tclassName?: string;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\twebviewStyle?: StyleProp<ViewStyle>;\r\n}\r\nexport interface TurnstileCallbacks {\r\n\tonVerify?: (token: string) => void;\r\n\tonLoad?: (widgetId: string) => void;\r\n\tonError?: (error?: Error | any) => void;\r\n\tonExpire?: (token: string) => void;\r\n\tonTimeout?: () => void;\r\n\tonAfterInteractive?: () => void;\r\n\tonBeforeInteractive?: () => void;\r\n\tonUnsupported?: () => void;\r\n}\r\n\r\nexport type TurnstileEvent =\r\n\t| 'verify'\r\n\t| 'load'\r\n\t| 'error'\r\n\t| 'expire'\r\n\t| 'timeout'\r\n\t| 'afterInteractive'\r\n\t| 'beforeInteractive'\r\n\t| 'unsupported';\r\n\r\nexport interface ReactNativeTurnstleEvent {\r\n\tevent: TurnstileEvent;\r\n\tdata?: string;\r\n}\r\n\r\nexport type TurnstileResetRef = React.MutableRefObject<() => void | undefined>;\r\n\r\ntype Dimension = { width: number; height: number };\r\n\r\ninterface TurnstileDimensions {\r\n\tnormal: Dimension;\r\n\tcompact: Dimension;\r\n}\r\n\r\nconst turnstileDimensions: TurnstileDimensions = {\r\n\tnormal: { width: 300, height: 65 },\r\n\tcompact: { width: 130, height: 120 },\r\n};\r\n\r\nexport default function ReactNativeTurnstile(props: TurnstileProps) {\r\n\tconst {\r\n\t\tsitekey,\r\n\t\tonVerify,\r\n\t\tonLoad,\r\n\t\tonError,\r\n\t\tonExpire,\r\n\t\tonTimeout,\r\n\t\tonAfterInteractive,\r\n\t\tonBeforeInteractive,\r\n\t\tonUnsupported,\r\n\t\taction,\r\n\t\tcData,\r\n\t\ttheme,\r\n\t\tlanguage,\r\n\t\ttabIndex,\r\n\t\tresponseField,\r\n\t\tresponseFieldName,\r\n\t\tsize,\r\n\t\tfixedSize,\r\n\t\tretry,\r\n\t\tretryInterval,\r\n\t\trefreshExpired,\r\n\t\tappearance,\r\n\t\texecution,\r\n\t\tid,\r\n\t\tresetRef,\r\n\t\tstyle,\r\n\t\twebviewStyle,\r\n\t} = props;\r\n\r\n\tconst webviewRef = useRef<WebView>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (resetRef) {\r\n\t\t\tresetRef.current = () => {\r\n\t\t\t\tif (webviewRef.current) {\r\n\t\t\t\t\twebviewRef.current.reload();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}, [resetRef]);\r\n\r\n\t// Build URL and query parameters\r\n\tconst params = new URLSearchParams();\r\n\r\n\tif (sitekey) params.append('sitekey', sitekey);\r\n\tif (action) params.append('action', action);\r\n\tif (cData) params.append('cData', cData);\r\n\tif (theme) params.append('theme', theme);\r\n\tif (language) params.append('language', language);\r\n\tif (tabIndex) params.append('tabIndex', tabIndex.toString());\r\n\tif (responseField) params.append('responseField', responseField.toString());\r\n\tif (responseFieldName) params.append('responseFieldName', responseFieldName);\r\n\tif (size) params.append('size', size);\r\n\tif (fixedSize) params.append('fixedSize', fixedSize.toString());\r\n\tif (retry) params.append('retry', retry);\r\n\tif (retryInterval) params.append('retryInterval', retryInterval.toString());\r\n\tif (refreshExpired) params.append('refreshExpired', refreshExpired);\r\n\tif (appearance) params.append('appearance', appearance);\r\n\tif (execution) params.append('execution', execution);\r\n\tif (id) params.append('id', id);\r\n\r\n\tconst url = `${PUBLIC_DOMAIN}/turnstile?${params.toString()}`;\r\n\r\n\tconst dimensions = turnstileDimensions[size || 'normal'];\r\n\r\n\tconst computedStyles: StyleProp<ViewStyle> = StyleSheet.flatten([\r\n\t\t{ height: dimensions.height, width: dimensions.width },\r\n\t\tstyle,\r\n\t]);\r\n\tconst computedWebviewStyles: StyleProp<ViewStyle> = StyleSheet.flatten([styles.webview, webviewStyle]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<View style={computedStyles}>\r\n\t\t\t\t<WebView\r\n\t\t\t\t\tref={webviewRef}\r\n\t\t\t\t\tsource={{ uri: url }}\r\n\t\t\t\t\tonMessage={event => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst eventData = JSON.parse(event.nativeEvent.data) as ReactNativeTurnstleEvent;\r\n\t\t\t\t\t\t\tif (!eventData.event)\r\n\t\t\t\t\t\t\t\tthrow new Error('Invalid event received from Turnstile endpoint');\r\n\r\n\t\t\t\t\t\t\tswitch (eventData.event) {\r\n\t\t\t\t\t\t\t\tcase 'verify':\r\n\t\t\t\t\t\t\t\t\tif (onVerify && eventData.data) onVerify(eventData.data);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'load':\r\n\t\t\t\t\t\t\t\t\tif (onLoad && eventData.data) onLoad(eventData.data);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\t\t\t\tif (onError) onError(new Error(eventData.data || 'An error occurred'));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'expire':\r\n\t\t\t\t\t\t\t\t\tif (onExpire && eventData.data) onExpire(eventData.data);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'timeout':\r\n\t\t\t\t\t\t\t\t\tif (onTimeout) onTimeout();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'afterInteractive':\r\n\t\t\t\t\t\t\t\t\tif (onAfterInteractive) onAfterInteractive();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'beforeInteractive':\r\n\t\t\t\t\t\t\t\t\tif (onBeforeInteractive) onBeforeInteractive();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase 'unsupported':\r\n\t\t\t\t\t\t\t\t\tif (onUnsupported) onUnsupported();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tconsole.error('Unsupported event received from Turnstile endpoint');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tjavaScriptEnabled={true}\r\n\t\t\t\t\tstyle={computedWebviewStyles}\r\n\t\t\t\t\toriginWhitelist={['*']}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\twebview: {\r\n\t\tflex: 1,\r\n\t},\r\n});\r\n\r\nexport function resetTurnstile(ref: TurnstileResetRef) {\r\n\tif (ref.current && typeof ref.current === 'function') {\r\n\t\tref.current();\r\n\t}\r\n}\r\n","export const PUBLIC_DOMAIN = 'https://turnstile.1337707.xyz';\r\n"],"mappings":"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","names":["src_exports","__export","src_default","resetTurnstile","__toCommonJS","import_react","import_react_native_webview","import_react_native","PUBLIC_DOMAIN","turnstileDimensions","ReactNativeTurnstile","props","sitekey","onVerify","onLoad","onError","onExpire","onTimeout","onAfterInteractive","onBeforeInteractive","onUnsupported","action","cData","theme","language","tabIndex","responseField","responseFieldName","size","fixedSize","retry","retryInterval","refreshExpired","appearance","execution","id","resetRef","style","webviewStyle","webviewRef","params","url","PUBLIC_DOMAIN","dimensions","computedStyles","computedWebviewStyles","styles","React","event","eventData","e","__name","resetTurnstile","ref","src_default","ReactNativeTurnstile"]}